# vim: set ft=sh:
# Initialise DOTFILES
[[ -f $HOME/.dot ]] && source $HOME/.dot

echo $HOSTNAME $(date +"%Y-%m-%d %H:%M:%S") $$ $PPID common/profile >> $HOME/.dot_log

# This gets loaded as the only startup file prior to the gnome-session

# Justone variables and paths
# Try to ensure this only gets loaded once as it adds to the
# path. Do this by checking if 'env-check' is available. Can't
# rely on checking environment variables as they are retained
# when the PATH is cleared for stuff like 'tmux' sessions.
# Do this early as it clobbers LD_LIBRARY_PATH
which env-check > /dev/null 2>&1
if [[ $? -ne 0 ]]; then
	if [ -f /etc/justone_profile ]; then
		. /etc/justone_profile
	fi
fi

#################
# Path functions.
#################

# Path add function
# If there is a second parameter then prepend instead of append
pathadd() {
    if [ -d "$1" ] && [[ ":$PATH:" != *":$1:"* ]]; then
		if [ -z "$2" ]; then
			PATH="${PATH:+"$PATH:"}$1"
		else
			PATH="$1${PATH:+":$PATH"}"
		fi
    fi
}

# LD_LIBRARY_PATH
# If there is a second parameter then prepend instead of append
ldpathadd() {
    if [ -d "$1" ] && [[ ":$LD_LIBRARY_PATH:" != *":$1:"* ]]; then
		if [ -z "$2" ]; then
			LD_LIBRARY_PATH="${LD_LIBRARY_PATH:+"$LD_LIBRARY_PATH:"}$1"
		else
			LD_LIBRARY_PATH="$1${LD_LIBRARY_PATH:+":$LD_LIBRARY_PATH"}"
		fi
    fi
}

# MANPATH
# If there is a second parameter then prepend instead of append
manpathadd() {
    if [ -d "$1" ] && [[ ":$MANPATH:" != *":$1:"* ]]; then
		if [ -z "$2" ]; then
			MANPATH="${MANPATH:+"$MANPATH:"}$1"
		else
			MANPATH="$1${MANPATH:+":$MANPATH"}"
		fi
    fi
}

# Path add function
# If there is a second parameter then prepend instead of append
cdpathadd() {
    if [ -d "$1" ] && [[ ":$CDPATH:" != *":$1:"* ]]; then
		if [ -z "$2" ]; then
			CDPATH="${CDPATH:+"$CDPATH:"}$1"
		else
			CDPATH="$1${CDPATH:+":$CDPATH"}"
		fi
    fi
}

# Library path
ldpathadd /usr/local/lib

# Add ccache to front of path
# We only want one ccache!
if [[ -d ~/$HOSTNAME/install/lib/ccache ]]
then
	pathadd ~/$HOSTNAME/install/lib/ccache pre
elif [[ -d ~/install/lib/ccache ]]
then
	pathadd ~/install/lib/ccache pre
else
	pathadd /usr/lib/ccache pre
fi

# Locally installed stuff.
pathadd ~/install/bin pre
pathadd ~/$HOSTNAME/install/bin pre
ldpathadd ~/install/lib pre
ldpathadd ~/$HOSTNAME/install/lib pre
manpathadd ~/install/share/man pre
manpathadd ~/$HOSTNAME/install/share/man pre
manpathadd ~/install/man pre
manpathadd ~/$HOSTNAME/install/man pre

# Setting MANPATH at all means default man path isn't checked :(
manpathadd /usr/share/man

# Always stick my bin on the front of the path
pathadd ~/bin pre
pathadd ~/$HOSTNAME/bin pre

# git hub plugin
if [[ -d ~/Stuff/git-hub ]]; then
	pathadd ~/Stuff/git-hub/lib
	manpathadd ~/Stuff/git-hub/man
	export GIT_HUB_ROOT=$HOME/Stuff/git-hub
fi

# Ensure PATH and MANPATH are exported
export PATH LD_LIBRARY_PATH MANPATH

# Setup test directory for PostgreSQL JustOne tests
export PGTESTDIR=$HOME/$HOSTNAME/test
if [ ! -d $PGTESTDIR ]; then
	if [ -d $(dirname $PGTESTDIR) ]; then
		mkdir $PGTESTDIR
	fi
fi

# Make
# Note the justone profile sets this, but we override it here
export MAKEFLAGS="-j$(expr $(grep processor /proc/cpuinfo | wc -l) / 2) V=0"

# Temp folder
export TMPDIR=/tmp/${USER:-$LOGNAME}
[[ ! -d $TMPDIR ]] && mkdir $TMPDIR

# Setup solarized dircolors
if [ -d $DOTFILES/externals/dircolors-solarized ]; then
	if [ -f $DOTFILES/externals/dircolors-solarized/dircolors.ansi-light ]; then
		eval `dircolors $DOTFILES/externals/dircolors-solarized/dircolors.ansi-light`
	fi
fi

# Java home
if [[ -z $JAVA_HOME ]]
then
	case `hostname` in
		iowa)
			export JAVA_HOME=/usr/lib/jvm/java-1.7.0-openjdk-amd64
			;;
		*)
			;;
	esac
fi

# Perlbrew
if [[ -d ~/$HOSTNAME/perlbrew ]]
then
	export PERLBREW_ROOT=~/$HOSTNAME/perlbrew
	export PERLBREW_HOME=~/$HOSTNAME/.perlbrew

	if [[ -f ~/$HOSTNAME/perlbrew/etc/bashrc ]]
	then
		export PERLBREW_HOME=~/$HOSTNAME/.perlbrew
		source ~/$HOSTNAME/perlbrew/etc/bashrc
	fi
fi

# Perl local::lib
if [[ -d ~/$HOSTNAME/perl5 ]]
then
	eval `perl -I ~/$HOSTNAME/perl5/lib/perl5 -Mlocal::lib=~/$HOSTNAME/perl5`
fi

# RVM
which rvm > /dev/null 2>&1
if [[ $? -ne 0 ]]; then
	[[ -s "~/.rvm/scripts/rvm" ]] && source "~/.rvm/scripts/rvm"
fi

# CCACHE
[[ -d ~/local/ccache ]] && export CCACHE_DIR=~/local/ccache
[[ -d ~/$HOSTNAME/ccache ]] && export CCACHE_DIR=~/$HOSTNAME/ccache

# Find actual gcc by taking first entry for gcc that isn't
# in one of the user's directories. We do this to avoid
# recursion as we're also possibly using colorgcc which
# appears on the PATH before ccache. Sadly ccache takes
# first path entry that isn't itself, rather than next
# path entry that isn't itself.
for g in $(which -a gcc)
do
	if [[ $g =~ $USER ]]
	then
		continue
	fi
	export CCACHE_PATH=$(dirname $g)
	break
done

# CDPATH
# We need to add . as /bin/sh will ONLY consider CDPATH if it is set!
cdpathadd . pre
cdpathadd ~/$HOSTNAME

# LESS
export LESS="-F -X -R"

# Sensible file permissions by default
umask 022
