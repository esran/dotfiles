#!/usr/bin/env zsh
# shellcheck disable=1090
# vim: set ft=zsh:
echo "$HOSTNAME $(date +"%Y-%m-%d %H:%M:%S") $$ $PPID zsh/zsh_rc" >> ~/.dot_log

# Initialise DOTFILES
[[ -f ~/.dot ]] && source ~/.dot

# Runs second (after .zprofile) for each shell created in the gnome-session

# Liquidprompt configuration
# get this in early before we load the plugin
[[ -f ~/.liquidpromptrc ]] && . ~/.liquidpromptrc

# reset prompt tag if it is BASH
if [[ $LP_PS1_PREFIX =~ BASH.* ]]
then
	LP_PS1_PREFIX=
fi

# Antigen Install
if [[ ! -d $HOME/.antigen ]]
then
	echo "NOTICE: cloning antigen"
	git clone https://github.com/zsh-users/antigen.git $HOME/.antigen
fi
source $HOME/.antigen/antigen.zsh

# Antigen Bundles
antigen use oh-my-zsh
antigen bundle git
# antigen bundle command-not-found
antigen bundle zsh-users/zsh-syntax-highlighting
antigen bundle zsh-users/zsh-history-substring-search
antigen bundle zsh-users/zsh-completions
antigen bundle esran/liquidprompt

# Antigen Done
antigen apply

echo "$HOSTNAME $(date +"%Y-%m-%d %H:%M:%S") $$ $PPID zsh/zsh_rc post-plugins" >> ~/.dot_log

# oh-my-zsh clobbers LESS :(
export LESS="-F -X -R"

# History substring search
# zmodload zsh/terminfo
# shellcheck disable=2154
bindkey "$terminfo[kcuu1]" history-substring-search-up
bindkey "$terminfo[kcud1]" history-substring-search-down

# Load common functions
if [[ -d $DOTFILES/common/functions ]]
then
	fpath+=( $DOTFILES/common/functions )
	for f in $DOTFILES/common/functions/*
	do
		[[ -f $f ]] && autoload "$(basename "$f")"
	done
fi

# Load zsh specific functions
if [[ -d $DOTFILES/zsh/functions ]]
then
	fpath+=( $DOTFILES/zsh/functions )
	for f in $DOTFILES/zsh/functions/*
	do
		[[ -f $f ]] && autoload "$(basename "$f")"
	done
fi

echo "$HOSTNAME $(date +"%Y-%m-%d %H:%M:%S") $$ $PPID zsh/zsh_rc post-functions" >> ~/.dot_log

# turn of nomatch so that stuff like -? and ^. works
setopt nonomatch

# Use dig script to get hosts for completion
if [[ -x $DOTFILES/common/scripts/get-hosts ]]
then
	# shellcheck disable=SC2016
	zstyle -e ':completion:*' hosts 'reply=($("$DOTFILES/common/scripts/get-hosts"))'
fi

echo "$HOSTNAME $(date +"%Y-%m-%d %H:%M:%S") $$ $PPID zsh/zsh_rc post-hosts" >> ~/.dot_log

# Extra processing when inside emacs
if [[ -n "$INSIDE_EMACS" ]]
then
	chpwd() {
		print -P "\033AnSiTc %d"
	}
	print -P "\033AnSiTu %n"
	print -P "\033AnSiTc %d"
fi

# History
HISTFILE="$HOME/.zsh_history"
HISTSIZE=10000000
SAVEHIST=10000000

unsetopt INC_APPEND_HISTORY   	 # Don't write history on command start
unsetopt SHARE_HISTORY           # Don't share between sessions

setopt BANG_HIST                 # Treat the '!' character specially during expansion.
setopt EXTENDED_HISTORY          # Write the history file in the ":start:elapsed;command" format.
setopt INC_APPEND_HISTORY_TIME   # Write to the history file immediately after command
setopt HIST_EXPIRE_DUPS_FIRST    # Expire duplicate entries first when trimming history.
setopt HIST_IGNORE_DUPS          # Dont record an entry that was just recorded again.
setopt HIST_IGNORE_ALL_DUPS      # Delete old recorded entry if new entry is a duplicate.
setopt HIST_FIND_NO_DUPS         # Do not display a line previously found.
setopt HIST_IGNORE_SPACE         # Dont record an entry starting with a space.
setopt HIST_SAVE_NO_DUPS         # Dont write duplicate entries in the history file.
setopt HIST_REDUCE_BLANKS        # Remove superfluous blanks before recording entry.
setopt HIST_VERIFY               # Dont execute immediately upon history expansion.
setopt HIST_BEEP                 # Beep when accessing nonexistent history.

# FZF
[[ -f ~/.fzf.zsh ]] && source ~/.fzf.zsh

# Use ripgrep for fzf if possible
if which rg > /dev/null 2>&1
then
	export FZF_DEFAULT_COMMAND='rg --files --no-ignore --hidden --follow --glob "!.git/*"'
	# shellcheck disable=SC2016
	bindkey -s "\\C-p" '$vim $(fzf);'
fi

# Setup the neovim_autocd, so that terminal window follows shell's directory
chpwd_functions+=( neovim_autocd )

# Load aliases
[[ -f ~/.zsh_alias ]] && . ~/.zsh_alias

# Common aliases
[[ -f $DOTFILES/common/alias ]] && . "$DOTFILES/common/alias"

# Check if we're starting in a branch directory...
# shellcheck disable=SC1001
if [[ $PWD =~ /*\/work\/PostgreSQL\/*/ ]]
then
	branch=${${PWD#~/work/PostgreSQL/}%%/*}
	if [[ -n $branch ]]
	then
		switch-pg "$branch"
	fi
	unset branch
fi

# Pick up completion functions
if [[ -d $DOTFILES/zsh/completion ]]
then
	fpath+=($DOTFILES/zsh/completion)
fi

# Git hub completions
if [[ -d ~/Stuff/git-hub/share/zsh-completion ]]; then
	fpath+=(~/Stuff/git-hub/share/zsh-completion)
fi
